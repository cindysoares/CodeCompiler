
package com.gteamtrials.soap.service;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8-b131 
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "CodeCompilerServiceImplService", targetNamespace = "http://service.soap.gteamtrials.com/", wsdlLocation = "FILL_IN_BY_SERVER")
public class CodeCompilerServiceImplService
    extends Service
{

    private final static URL CODECOMPILERSERVICEIMPLSERVICE_WSDL_LOCATION;
    private final static WebServiceException CODECOMPILERSERVICEIMPLSERVICE_EXCEPTION;
    private final static QName CODECOMPILERSERVICEIMPLSERVICE_QNAME = new QName("http://service.soap.gteamtrials.com/", "CodeCompilerServiceImplService");

    static {
        CODECOMPILERSERVICEIMPLSERVICE_WSDL_LOCATION = com.gteamtrials.soap.service.CodeCompilerServiceImplService.class.getResource("FILL_IN_BY_SERVER");
        WebServiceException e = null;
        if (CODECOMPILERSERVICEIMPLSERVICE_WSDL_LOCATION == null) {
            e = new WebServiceException("Cannot find 'FILL_IN_BY_SERVER' wsdl. Place the resource correctly in the classpath.");
        }
        CODECOMPILERSERVICEIMPLSERVICE_EXCEPTION = e;
    }

    public CodeCompilerServiceImplService() {
        super(__getWsdlLocation(), CODECOMPILERSERVICEIMPLSERVICE_QNAME);
    }

    public CodeCompilerServiceImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    /**
     * 
     * @return
     *     returns CodeCompiler
     */
    @WebEndpoint(name = "CodeCompilerServiceImplPort")
    public CodeCompiler getCodeCompilerServiceImplPort() {
        return super.getPort(new QName("http://service.soap.gteamtrials.com/", "CodeCompilerServiceImplPort"), CodeCompiler.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CodeCompiler
     */
    @WebEndpoint(name = "CodeCompilerServiceImplPort")
    public CodeCompiler getCodeCompilerServiceImplPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://service.soap.gteamtrials.com/", "CodeCompilerServiceImplPort"), CodeCompiler.class, features);
    }

    private static URL __getWsdlLocation() {
        if (CODECOMPILERSERVICEIMPLSERVICE_EXCEPTION!= null) {
            throw CODECOMPILERSERVICEIMPLSERVICE_EXCEPTION;
        }
        return CODECOMPILERSERVICEIMPLSERVICE_WSDL_LOCATION;
    }

}
